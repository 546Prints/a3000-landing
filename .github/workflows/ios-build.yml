name: Build iOS App (Ad Hoc optional)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-14

    env:
      # >>> adjust only if your paths/scheme are different
      PROJECT_PATH: SmartwatchApp/SmartwatchApp.xcodeproj
      SCHEME: SmartwatchApp
      CONFIGURATION: Release
      ARCHIVE_PATH: output/App.xcarchive
      APP_NAME: SmartwatchApp
      EXPORT_PATH: output
      INFOPLIST_FILE: SmartwatchApp/Resources/Info.plist

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Select Xcode (prefer 16.2, fallback 15.4)
        run: |
          set -e
          if [ -d "/Applications/Xcode_16.2.app" ]; then
            sudo xcode-select -s /Applications/Xcode_16.2.app
          elif [ -d "/Applications/Xcode_15.4.app" ]; then
            sudo xcode-select -s /Applications/Xcode_15.4.app
          fi
          xcodebuild -version

      - name: (Optional) Generate Xcode project from project.yml
        run: |
          if [ -f SmartwatchApp/project.yml ]; then
            brew install xcodegen || true
            xcodegen generate --spec SmartwatchApp/project.yml
          fi

      - name: Debug â€” show files
        run: |
          pwd
          ls -la
          ls -la SmartwatchApp || true
          ls -R SmartwatchApp || true
          /usr/libexec/PlistBuddy -c "Print :CFBundleIdentifier" "$INFOPLIST_FILE" || true

      # ---------- Signing material (only runs if secrets exist) ----------
      - name: Create keychain and import .p12
        if: ${{ secrets.P12_BASE64 && secrets.P12_PASSWORD }}
        env:
          P12_BASE64: ${{ secrets.P12_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          set -euo pipefail
          KEYCHAIN="$RUNNER_TEMP/build.keychain-db"
          security create-keychain -p "" "$KEYCHAIN"
          security set-keychain-settings -lut 21600 "$KEYCHAIN"
          security list-keychains -s "$KEYCHAIN"
          echo "$P12_BASE64" | base64 --decode > "$RUNNER_TEMP/cert.p12"
          security import "$RUNNER_TEMP/cert.p12" -k "$KEYCHAIN" -P "$P12_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "" "$KEYCHAIN"

      - name: Install provisioning profile (Ad Hoc)
        if: ${{ secrets.MOBILEPROVISION_BASE64 }}
        env:
          MOBILEPROVISION_BASE64: ${{ secrets.MOBILEPROVISION_BASE64 }}
        run: |
          set -e
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$MOBILEPROVISION_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/adhoc.mobileprovision

      # ---------------------- Build / Archive -----------------------------
      - name: Build (archive)
        shell: bash
        run: |
          set -e
          mkdir -p output
          # If no signing secrets, disable code signing so build still works
          EXTRA_SIGNING=""
          if [ -z "${{ secrets.P12_BASE64 }}" ]; then
            EXTRA_SIGNING="CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO"
          fi
          xcodebuild \
            -project "$PROJECT_PATH" \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -sdk iphoneos \
            $EXTRA_SIGNING \
            -archivePath "$ARCHIVE_PATH" \
            clean archive

      # ---------------------- Export signed IPA (only if secrets) ---------
      - name: Create ExportOptions.plist (Ad Hoc)
        if: ${{ secrets.MOBILEPROVISION_BASE64 && secrets.P12_BASE64 && secrets.P12_PASSWORD }}
        run: |
          cat > ExportOptions.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>ad-hoc</string>
            <key>signingStyle</key><string>manual</string>
            <key>stripSwiftSymbols</key><true/>
            <key>destination</key><string>export</string>
            <key>compileBitcode</key><false/>
          </dict>
          </plist>
          PLIST

      - name: Export IPA
        if: ${{ secrets.MOBILEPROVISION_BASE64 && secrets.P12_BASE64 && secrets.P12_PASSWORD }}
        run: |
          xcodebuild -exportArchive \
            -archivePath "$ARCHIVE_PATH" \
            -exportPath "$EXPORT_PATH" \
            -exportOptionsPlist ExportOptions.plist

      # ---------------------- Fallback: unsigned .app zip -----------------
      - name: Package unsigned .app (fallback)
        if: ${{ !secrets.P12_BASE64 }}
        run: |
          set -e
          APP_PATH="$ARCHIVE_PATH/Products/Applications/$APP_NAME.app"
          if [ -d "$APP_PATH" ]; then
            ditto -ck --sequesterRsrc --keepParent "$APP_PATH" output/${APP_NAME}-unsigned.zip
          else
            echo "App not found at $APP_PATH"
            ls -R output || true
            exit 1
          fi

      # ---------------------- Upload artifacts ---------------------------
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: |
            output/*.ipa
            output/*-unsigned.zip
