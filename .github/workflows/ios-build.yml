name: Build iOS App (unsigned)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Prefer Xcode 16.2; fall back to 15.4 if 16.2 is not on the runner
      - name: Select Xcode (prefer 16.2, fallback 15.4)
        shell: bash
        run: |
          set -e
          if [ -d "/Applications/Xcode_16.2.app" ]; then
            sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
            xcodebuild -version
          elif [ -d "/Applications/Xcode_15.4.app" ]; then
            sudo xcode-select -s /Applications/Xcode_15.4.app/Contents/Developer
            xcodebuild -version
          else
            echo "No expected Xcode found"; exit 1
          fi

      # (Optional) quick visibility of repo contents in logs
      - name: Debug â€” list files
        run: |
          pwd
          ls -la
          echo "---- SmartwatchApp dir ----"
          ls -la SmartwatchApp || true
          echo "---- Sources ----"
          ls -la SmartwatchApp/Sources || true
          echo "---- Resources ----"
          ls -la SmartwatchApp/Resources || true

      # Install XcodeGen to convert project.yml -> .xcodeproj
      - name: Install XcodeGen
        run: |
          brew update
          brew install xcodegen

      - name: Show project.yml (for sanity check)
        run: |
          test -f SmartwatchApp/project.yml
          sed -n '1,160p' SmartwatchApp/project.yml || true

      - name: Generate Xcode project from project.yml
        run: |
          cd SmartwatchApp
          xcodegen generate --spec project.yml
          echo "Generated files:"
          ls -la

      # Build without code signing (produces an .xcarchive)
      - name: Build (archive) WITHOUT code signing
        run: |
          mkdir -p output
          xcodebuild \
            -project SmartwatchApp/SmartwatchApp.xcodeproj \
            -scheme SmartwatchApp \
            -configuration Release \
            -sdk iphoneos \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            clean archive \
            -archivePath output/App.xcarchive

      # Zip the built .app so you can download it as an artifact
      - name: Create app zip artifact
        run: |
          APP_PATH="output/App.xcarchive/Products/Applications/SmartwatchApp.app"
          if [ ! -d "$APP_PATH" ]; then
            echo "Built .app not found at $APP_PATH"; exit 1
          fi
          /usr/bin/zip -r output/SmartwatchApp.app.zip "$APP_PATH"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SmartwatchApp-unsigned-build
          path: |
            output/App.xcarchive
            output/SmartwatchApp.app.zip
